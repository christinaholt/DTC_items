#!/usr/bin/env python

import string
import sys
import os
import re
import shutil
from datetime import datetime
from subprocess import Popen, PIPE, STDOUT
from time import sleep
from itertools import izip

# ########################################################################################
# Frimel
# v 2015Sep21
#
# READ THIS READ THIS
# -------------------
# This script is used to compare records in two grib files.
#
# This script reads the file "differ.file.txt" for the grib1 and grib2 filenames
# that will be processed. There is one filename per line.
# wgrib and wgrib2 is used to dump the individual records of a grib file 
# from two sources and than diffs the records by running compare.files.csh.
# A report is generated

# HOW TO RUN THIS SCRIPT - requirements
# -------------------------------------
# Run "module load wgrib2" and "module load wgrib" before running this script.
# Run compare.make.differ.file.csh  to generate  "differ.file.txt"
# Edit as needed the CONFIG SECTION below.

# NOTES: 
# -----
# WGRIB2
# wgrib2 -d 3 -grib_ieee fileout file.grb2  (write record 3 to fileout.grb fileout.h fileout.head fileout.tail)
# wgrib2 -GRIB fileout test.grb2  (writes all the data to fileout)
# wgrib2 -d 3 file.grb2 -bin fileout.bin  (writes record 3 to fileout.bin)
# wgrib -d 3 rec_num -o fileout.bin file.grb 
# I used this to process and input 1 file.
#file='sandy18l.2012102806.hwrforg_n.grb2f00'
#file=raw_input("Enter the filename: ")
# ########################################################################################

#For grb2 use -s (simple inventory) wgrib or wgrib2 provids the inventory.
#1:0:d=2012102806:BRTMP:1301 hybrid level:48 hour fcst:
#2:224086:d=2012102806:BRTMP:1302 hybrid level:48 hour fcst:
# ...
#11:2123916:d=2012102806:BRTMP:11707 hybrid level:48 hour fcst:

# -----------------------
# START of CONFIG SECTION
# -----------------------
# Just guessing. Pick a number that exceeds the number of records in the grib file.
# If too small, the number of records dumped in the report will equal the nubmer here.
# If too large, Not a problem since processing stops after all the records 
# in the file are processed. 1 extra 0 byte file is created as a side effect.
#numrecs=2000

# Used to identify if the file is grib2 by the filename.
# Need something unique in the filename. Since if it not grib2
# the script assumes it is grib1.
grib2id='.grb2'

#scriptdir='/home/James.T.Frimel/compare/deepCC'
scriptdir=os.getcwd()
#compare_script='/home/James.T.Frimel/compare/deepCC/compare.files.csh'
compare_script=os.path.join(scriptdir,'compare.files.csh')

# ---------------
# ---------------
# Output report location and name
#reportdir='/mnt/pan2/projects/dtc-hurr/James.T.Frimel/compare/deepCC'
reportdir='/pan2/projects/dtc-hurr/Christina.Holt/compare/deepCC'

#diff_report=os.path.join(reportdir, 'diff_report_file.CC_trunk_20160205.2012102812.18L.txt')
diff_report=os.path.join(reportdir, 'my_diff_report_filename.txt')

#This is the name of the file generated by compare.make.differ.file.csh
#diff_file='/home/James.T.Frimel/compare/deepCC/the.files.that.differ.txt'
diff_file=os.path.join(scriptdir,'the.files.that.differ.txt')


# Output dirs where records are place and diffed.
#outputdir1='/mnt/pan2/projects/dtc-hurr/James.T.Frimel/compare/deepCC/output1'
#outputdir2='/mnt/pan2/projects/dtc-hurr/James.T.Frimel/compare/deepCC/output2'
outputdir1=os.path.join(reportdir,'output1')
outputdir2=os.path.join(reportdir,'output2')


# Source directories that contain the grib files you are comparing.
dir1='/pan2/projects/dtc-hurr/Christina.Holt/UPP_test_20160531/pytmp/bUPP/2012102806/18L/intercom/nonsatpost-f12h00m/nonsatpost-f12h00m'
dir2='/pan2/projects/dtc-hurr/Christina.Holt/UPP_test_20160531/pytmp/merge_thru721/2012102806/18L/intercom/nonsatpost-f12h00m/nonsatpost-f12h00m'
#dir1='/pan2/projects/dtc-hurr/Christina.Holt/CC_trunk_20160205/pytmp/CC_trunk_20160205/com/2012102812/18L/'
#dir2='/pan2/projects/dtc-hurr/Christina.Holt/CC_20160205/pytmp/CC_20160205/com/2012102812/18L/'
#dir1='/mnt/pan2/projects/dtc-hurr/James.T.Frimel/pytmp/vtest1.hwrf_trunk/com/2012102806/18L/'
#dir2='/mnt/pan2/projects/dtc-hurr/James.T.Frimel/pytmp/vtest1.hwrf_multistorm/com/2012102806/18L/'

# -------------------------
# END of CONFIG SECTION
# --------------------------

#record_numbers=map(str,range(1,numrecs))

#Create the directories.
if not os.path.isdir(outputdir1):
    os.makedirs(outputdir1)
if not os.path.isdir(outputdir2):
    os.makedirs(outputdir2)


# Read in the differ file to a list, where each line is an element in the list.
with open(diff_file, 'r') as ifp:
    differfiles = ifp.read().splitlines()
ifp.close()


if os.path.isfile(diff_report):
    print "\n\nThings that make you go Hmmmmmmmm, A REPORT FILE %s EXISTS, move it. I'm exiting ...\n\n"%diff_report
    sys.exit(0)

fp = open(diff_report,'w',0)
fp.write("This is an hwrf deep CC diff report.\n")
fp.write("Comparing the following directories: Only the *.grb and *.grb2 files.\n")
fp.write("dir1: %s\n"%dir1)
fp.write("dir2: %s\n"%dir2)
fp.write("--------------------------------------------\n\n") 


for idx,filename in enumerate( differfiles):

    fp.write("Processing file %d %s \n"%(idx+1,filename))

    #Delete the output dirs each time we process a filename
    if os.path.isdir(outputdir1):
        shutil.rmtree(outputdir1)
    if os.path.isdir(outputdir2):
        shutil.rmtree(outputdir2)
    os.makedirs(outputdir1)
    os.makedirs(outputdir2)

    # For file1 and file 2, Determine the number of records and 
    # hash-um so we can compare.
    if grib2id in filename:
        cmd1 = ['wgrib2', os.path.join(dir1,filename)]
        cmd2 = ['wgrib2', os.path.join(dir2,filename)]
    else:
        cmd1 = ['wgrib', os.path.join(dir1,filename) ]
        cmd2 = ['wgrib', os.path.join(dir2,filename) ]

    p1 = Popen(cmd1, shell=False, stdout=PIPE, stderr=PIPE, close_fds=False)
    inventory1 = p1.stdout.read().splitlines()
    number_of_recs1=len(inventory1)
    # 1:0:d=2012102806:BRTMP:1301 hybrid level:48 hour fcst:
    # {1: 'BRTMP:1301 hybrid level:48 hour fcst'}
    # {'BRTMP:1301 hybrid level:48 hour fcst': 1}
    dict1=dict()
    for record in inventory1:
       dict1[record.split(':')[0]] = '.'.join(''.join(map(str, record.strip(':').split(':')[3:])).split())
       #dict1[record.split(':')[0]] = ':'.join(map(str, record.strip(':').split(':')[3:]))
       #dict1[':'.join(map(str, record.strip(':').split(':')[3:]))]=int(record.split(':')[0])

    p2 = Popen(cmd2, shell=False, stdout=PIPE, stderr=PIPE, close_fds=False)
    inventory2 = p2.stdout.read().splitlines()
    number_of_recs2=len(inventory2)
    # 1:0:d=2012102806:BRTMP:1301 hybrid level:48 hour fcst:
    # {'BRTMP:1301 hybrid level:48 hour fcst': 1}
    dict2=dict()
    for record in inventory2:
       dict2[record.split(':')[0]] = '.'.join(''.join(map(str, record.strip(':').split(':')[3:])).split())
       #dict2[record.split(':')[0]] = ':'.join(map(str, record.strip(':').split(':')[3:]))
       #dict2[':'.join(map(str, record.strip(':').split(':')[3:]))]=int(record.split(':')[0])


    #if number_of_recs1 > number_of_recs2:
#    diff_recs = [x for x in dict1 if x not in set(dict2)]
#    fp.write("The following records are in inventory1 but not inventory2\n")
#    for missing_rec in diff_recs:
#        fp.write("%s,%s\n"%(missing_rec,dict1[missing_rec]))

    #if number_of_recs2 > number_of_recs1:
#    diff_recs = [x for x in dict2 if x not in set(dict1)]
#    fp.write("The following records are in inventory2 but not inventory1\n")
#    for missing_rec in diff_recs:
#        fp.write("%s,%s\n"%(missing_rec,dict2[missing_rec]))

    # Write out all the records to individual files.
    num_unique_recs1 = number_of_recs1
    for rec_num, var_slab in dict1.iteritems():
        if grib2id in filename:
            cmd1 = ['wgrib2', '-d', rec_num, os.path.join(dir1,filename), '-bin', os.path.join(outputdir1,var_slab)] 
        else:
            cmd1 = ['wgrib', '-d', rec_num, '-o', os.path.join(outputdir1,var_slab), os.path.join(dir1,filename)]

        if os.path.isfile(os.path.join(outputdir1,var_slab)):
            fp.write("WARNING: Output 1, Duplicate record in the grib file.\n")
            fp.write("%s,%s\n"%(rec_num,var_slab))
            num_unique_recs1 -= 1

        p1 = Popen(cmd1, shell=False, stdout=PIPE, stderr=PIPE, close_fds=False)

        std_out = p1.stdout.read()
        std_err = p1.stderr.read()

    # Write out all the records to individual files.
    num_unique_recs2 = number_of_recs2
    for rec_num,var_slab in dict2.iteritems(): 
        if grib2id in filename:
            cmd2= ['wgrib2', '-d', rec_num, os.path.join(dir2,filename), '-bin', os.path.join(outputdir2,var_slab)]
        else:
            cmd2 = ['wgrib', '-d', rec_num, '-o', os.path.join(outputdir2,var_slab), os.path.join(dir2,filename)]

        if os.path.isfile(os.path.join(outputdir2,var_slab)):
            fp.write("WARNING: Output 2, Duplicate record in the grib file.\n")
            fp.write("%s,%s\n"%(rec_num,var_slab))
            num_unique_recs2 -= 1

        p2 = Popen(cmd2, shell=False, stdout=PIPE, stderr=PIPE, close_fds=False)

        std_out = p2.stdout.read()
        std_err = p2.stderr.read()

    fp.write("Total and Unique records in grib file 1: %d %d\n"%(number_of_recs1, num_unique_recs1))
    fp.write("Total and Unique records in grib file 2: %d %d\n"%(number_of_recs2, num_unique_recs2))
    fp.write("I'm done with wgrib ouput ... lets diff \n")

    cmd_diff = [compare_script, outputdir1, outputdir2]

    p_diff = Popen(cmd_diff, shell=False, stdout=PIPE, stderr=PIPE, close_fds=False)

    std_out = p_diff.stdout.read()
    std_err = p_diff.stderr.read()
    #print std_out
    #print std_err

    fp.write("Standard Out:\n")
    fp.write("%s\n"%std_out)
    fp.write("Standard Error: \n")
    fp.write("%s\n"%std_err)
    fp.write("I'm done with diff....\n")
    fp.write("======================================================================\n")
    #fp.flush()

print "I am done processing all the grib files"
fp.close()
sys.exit(0)
